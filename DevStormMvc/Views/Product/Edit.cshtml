@model DevStormMvc.Models.ProductModel

@{
    ViewBag.Title = "Edit";
}


@using (Html.BeginForm("Edit", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="container">
        <div class="gap gap-small"></div>
        <div class="row row-col-gap">
            <div class="col-md-offset-4 col-md-4">
                <div class="form-horizontal">
                    <div class="text-center">
                        <h2>Edit product</h2>
                        <div class="gap gap-small"></div>
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.brand, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.brand, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.brand, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.tva, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.tva, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.tva, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.quantity, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.quantity, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.discount, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.discount, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.discount, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.category, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @{var listItems = new List<SelectListItem>()
                {
                new SelectListItem {Text = "Technologies",   Value = "Technologies"},
                new SelectListItem {Text = "Clothes",   Value = "Clocthes"},
                new SelectListItem {Text = "Fourniture",   Value = "Fourniture"},
                new SelectListItem {Text = "Other", Value = "Other"}};
                                @Html.DropDownListFor(model => model.category, listItems, "Select Category", new { @class = "form-control" })}
                            @Html.ValidationMessageFor(model => model.category, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBox("Image", null, new { type = "file" })
                            @Html.ValidationMessageFor(model => model.ImageUrl)
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            @Html.ActionLink("Back to List", "Index", "", htmlAttributes: new { @class = "btn btn-warning", @type = "submit" })
                            <input style="float:right;margin-right:15px" ; type="submit" value="Save" class="btn btn-success" />
                        </div>
                    </div>
                    @*<div class="form-group">
                            <div class="col-md-offset-2 col-md-10
                                <input type="submit" value="Save" class="btn btn-success" />
                                @Html.ActionLink("Back to List", "Index", "", htmlAttributes: new { @class = "btn btn-info", @type = "submit" })
                            </div>

                        </div>*@
                </div>
            </div>
        </div>
    </div>


                                }


@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
